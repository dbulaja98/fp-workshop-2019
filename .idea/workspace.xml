<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d33c8a0f-c7ec-4b3f-a504-363f36f807bf" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/src/main/scala/io/lambdaworks/workshop/recursion/NonTail2TailRecursion.scala" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/scala/io/lambdaworks/workshop/recursion/NonTail2TailRecursion.scala" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="SBT">
      <state>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Workshop" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Workshop" type="f1a62948:ProjectNode" />
                <item name="Workshop-build" type="2d1252cf:ModuleNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Workshop" type="f1a62948:ProjectNode" />
                <item name="Workshop-build" type="2d1252cf:ModuleNode" />
                <item name="Dependencies" type="6de06a37:ExternalSystemViewDefaultContributor$MyDependenciesNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="2" />
  </component>
  <component name="ProjectId" id="23yAaeDJr4txggT6vbBxemCXV3m" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="settings.editor.selected.configurable" value="preferences.pluginManager" />
  </component>
  <component name="RunManager" selected="Application.NonTail2TailRecursion">
    <configuration name="Impure2Pure" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="io.lambdaworks.workshop.purity.Impure2Pure" />
      <module name="Workshop" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="io.lambdaworks.workshop.purity.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="NonTail2TailRecursion" type="Application" factoryName="Application" temporary="true">
      <option name="MAIN_CLASS_NAME" value="io.lambdaworks.workshop.recursion.NonTail2TailRecursion" />
      <module name="Workshop" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="io.lambdaworks.workshop.recursion.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="DropSpec" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="Workshop" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Class" />
      <option name="testClassPath" value="io.lambdaworks.workshop.firstclass.DropSpec" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="FirstClassFunctionsSpec" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="Workshop" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Class" />
      <option name="testClassPath" value="io.lambdaworks.workshop.firstclass.FirstClassFunctionsSpec" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Impure2PureSpec" type="ScalaTestRunConfiguration" factoryName="ScalaTest" temporary="true" nameIsGenerated="true" show_console_on_std_err="false" show_console_on_std_out="false">
      <module name="Workshop" />
      <option name="allowRunningInParallel" value="false" />
      <option name="projectPathOnTarget" />
      <option name="selectedOptions">
        <list />
      </option>
      <option name="testKind" value="Class" />
      <option name="testClassPath" value="io.lambdaworks.workshop.purity.Impure2PureSpec" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Application.Impure2Pure" />
      <item itemvalue="ScalaTest.Impure2PureSpec" />
      <item itemvalue="ScalaTest.DropSpec" />
      <item itemvalue="ScalaTest.FirstClassFunctionsSpec" />
      <item itemvalue="Application.NonTail2TailRecursion" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.NonTail2TailRecursion" />
        <item itemvalue="ScalaTest.FirstClassFunctionsSpec" />
        <item itemvalue="ScalaTest.DropSpec" />
        <item itemvalue="Application.Impure2Pure" />
        <item itemvalue="ScalaTest.Impure2PureSpec" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d33c8a0f-c7ec-4b3f-a504-363f36f807bf" name="Changes" comment="" />
      <created>1642696028523</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1642696028523</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ID_ORDER">
      <list>
        <option value="Default.Root" />
        <option value="Default.Author" />
        <option value="Default.Date" />
        <option value="Default.Subject" />
        <option value="Space.CommitStatus" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties class="scala.NotImplementedError" package="scala" />
          <option name="timeStamp" value="1" />
        </breakpoint>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.StackOverflowError" package="java.lang" />
          <option name="timeStamp" value="2" />
        </breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>